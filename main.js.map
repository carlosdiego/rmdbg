{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/counter/counter.component.html","webpack:///./src/app/counter/counter.component.ts","webpack:///./src/app/fetch-data/fetch-data.component.html","webpack:///./src/app/fetch-data/fetch-data.component.ts","webpack:///./src/app/fileupload/fileupload.component.css","webpack:///./src/app/fileupload/fileupload.component.html","webpack:///./src/app/fileupload/fileupload.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/report/rmdbgreport.app.component.html","webpack:///./src/app/report/rmdbgreport.app.component.ts","webpack:///./src/app/tab/tab.component.html","webpack:///./src/app/tab/tab.component.ts","webpack:///./src/app/tab/tabs.component.html","webpack:///./src/app/tab/tabs.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,6CAA6C,yHAAyH,0BAA0B,OAAO,KAAK,K;;;;;;;;;;;ACA5M,6J;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACW;AACT;AAEA;AACkB;AACX;AACS;AACQ;AACC;AACD;AAClB;AACF;AA4BnD;IAAA;IAAyB,CAAC;IAAb,SAAS;QA1BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6EAAgB;gBAChB,kEAAa;gBACb,2EAAgB;gBAChB,mFAAkB;gBAClB,qFAAmB;gBACnB,oFAAiB;gBACjB,kEAAa;gBACb,gEAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC;gBACjE,qEAAgB;gBAChB,0DAAW;gBACX,4DAAY,CAAC,OAAO,CAAC;oBACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE,SAAS,EAAE,MAAM,EAAE;iBAI1D,CAAC;aACH;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,EAAE,oFAAiB,CAAC;SAC7C,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1CtB,sIAAsI,gBAAgB,6G;;;;;;;;;;;;;;;;;;;;;ACA5G;AAM1C;IAJA;QAKS,iBAAY,GAAG,CAAC,CAAC;IAK1B,CAAC;IAHQ,2CAAgB,GAAvB;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IALU,gBAAgB;QAJ5B,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;SAElC,CAAC;OACW,gBAAgB,CAM5B;IAAD,uBAAC;CAAA;AAN4B;;;;;;;;;;;;ACN7B,qdAAqd,0BAA0B,qBAAqB,yBAAyB,qBAAqB,yBAAyB,qBAAqB,oBAAoB,iD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlkB;AACA;AAMlD;IAGE,4BAAY,IAAgB,EAAsB,OAAe;QAAjE,iBAIC;QAHC,IAAI,CAAC,GAAG,CAAoB,OAAO,GAAG,iCAAiC,CAAC,CAAC,SAAS,CAAC,gBAAM;YACvF,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAC1B,CAAC,EAAE,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;IACpC,CAAC;IAPU,kBAAkB;QAJ9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;SAE3B,CAAC;QAI+B,uEAAM,CAAC,UAAU,CAAC;yCAA/B,+DAAU;OAHjB,kBAAkB,CAQ9B;IAAD,yBAAC;CAAA;AAR8B;;;;;;;;;;;;ACP/B,mB;;;;;;;;;;;ACAA,oLAAoL,YAAY,oDAAoD,UAAU,mDAAmD,YAAY,6BAA6B,SAAS,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAjT;AACuD;AAUzG;IAIE,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,oCAAM,GAAN,UAAO,KAAK,EAAE,WAAgC;QAA9C,iBAwBC;QAvBC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;YACrB,MAAM,CAAC,IAAI,CAAC;gCAEL,IAAI;YAEX,IAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;YACpC,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACrC,UAAU,CAAC,MAAM,GAAG;gBACnB,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;gBAEhF,IAAI,IAAI,GAAG,aAA8B,CAAC;gBAE1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAElB,KAAI,CAAC,OAAO,GAAG,YAAY,CAAC;gBAC5B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,WAAW,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;YACtD,CAAC;YACD,UAAU,CAAC,OAAO,GAAG,UAAC,KAAK;gBACzB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC;QAEH,CAAC;QAnBD,GAAG,CAAC,CAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAjB,IAAI,IAAI;oBAAJ,IAAI;SAmBZ;IACH,CAAC;IAED,yCAAW,GAAX,UAAY,GAAG,EAAE,KAAK;QACpB,EAAE,CAAC,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,EAAC;YACtC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBACpB,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7D,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC7D,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IA1CU,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAM0B,+DAAU;OAJzB,mBAAmB,CA2C/B;IAAD,0BAAC;CAAA;AA3C+B;;;;;;;;;;;;ACXhC,oLAAoL,YAAY,oDAAoD,UAAU,mDAAmD,YAAY,6BAA6B,SAAS,yBAAyB,UAAU,UAAU,UAAU,oC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArW;AACoB;AAEmB;AAGpB;AAOxE;IAOE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IACzC,kCAAU,GAAV,UAAW,KAAK;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,oFAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,sCAAc,GAAd,UAAe,MAAqB,EAAE,OAAe;QACnD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAED,wCAAgB,GAAhB,UAAiB,QAAgB;QAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAf6B;QAA7B,+DAAS,CAAC,mFAAiB,CAAC;kCAAM,mFAAiB;8CAAC;IAL1C,aAAa;QAJzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;SAErB,CAAC;yCAQ0B,+DAAU;OAPzB,aAAa,CAqBzB;IAAD,oBAAC;CAAA;AArByB;;;;;;;;;;;;ACb1B,kCAAkC,0BAA0B,yBAAyB,4BAA4B,KAAK,cAAc,sBAAsB,KAAK,mCAAmC,YAAY,wBAAwB,OAAO,KAAK,qBAAqB,qDAAqD,KAAK,K;;;;;;;;;;;ACAjU,ioBAAioB,qBAAqB,yJAAyJ,cAAc,iL;;;;;;;;;;;;;;;;;;;;;ACAnxB;AAO1C;IALA;QAME,eAAU,GAAG,KAAK,CAAC;IASrB,CAAC;IAPC,mCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,iCAAM,GAAN;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IATU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;OACW,gBAAgB,CAU5B;IAAD,uBAAC;CAAA;AAV4B;;;;;;;;;;;;ACP7B,+EAA+E,YAAY,4DAA4D,SAAS,6HAA6H,8BAA8B,cAAc,oJAAoJ,8BAA8B,mBAAmB,gIAAgI,8BAA8B,SAAS,mFAAmF,YAAY,oHAAoH,sBAAsB,6FAA6F,cAAc,0EAA0E,SAAS,sC;;;;;;;;;;;;;;;;;;;;;;;ACAljC;AAE2B;AAMrE;IAAA;IA8KA,CAAC;IAjKC,qCAAS,GAAT,UAAU,MAAqB;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,0DAA8B,GAA9B;QACE,IAAI,KAAK,GAAW,CAAC,CAAC;QACtB,IAAI,oBAAoB,GAAW,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,iBAAO;YAC3C,oBAAoB,IAAI,OAAO,CAAC,KAAK,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;YACtC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,oBAAoB,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnG,CAAC;IAED,8CAAkB,GAAlB,UAAmB,MAAc,EAAE,IAAY;QAC7C,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,uCAAW,GAAX;QAAA,iBAWC;QAVC,IAAI,CAAC,OAAO,GAAG,wDAAwD,CAAC;QAExE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAO;YACjC,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,gCAAgC,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;YACpF,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,6BAA6B,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;YAChF,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,2CAA2C,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;YAChG,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,8EAA8E,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YAC5H,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,4BAA4B,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC;YACpF,KAAI,CAAC,OAAO,IAAI,6GAA6G,CAAC;QAChI,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBAYC;QAXC,IAAI,CAAC,YAAY,GAAG,yDAAyD,CAAC;QAE9E,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;YACtC,KAAI,CAAC,YAAY,IAAI,mEAAM,CAAC,MAAM,CAAC,gCAAgC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YACvF,KAAI,CAAC,YAAY,IAAI,mEAAM,CAAC,MAAM,CAAC,+BAA+B,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;YACnF,KAAI,CAAC,YAAY,IAAI,mEAAM,CAAC,MAAM,CAAC,sFAAsF,EACxH,OAAO,CAAC,aAAa,CAAC,CAAC;YACxB,KAAI,CAAC,YAAY,IAAI,mEAAM,CAAC,MAAM,CAAC,8CAA8C,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAE/G,KAAI,CAAC,YAAY,IAAI,6GAA6G,CAAC;QACrI,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAwB,GAAxB;QAAA,iBAYC;QAXC,IAAI,CAAC,oBAAoB,GAAG,iDAAiD,CAAC;QAE9E,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,GAAG,CAAC,EAAX,CAAW,CAAC,CAAC,OAAO,CAAC,iBAAO;YAC7D,KAAI,CAAC,oBAAoB,IAAI,mEAAM,CAAC,MAAM,CAAC,4BAA4B,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YACvF,KAAI,CAAC,oBAAoB,IAAI,mEAAM,CAAC,MAAM,CAAC,mCAAmC,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;YAC7G,KAAI,CAAC,oBAAoB,IAAI,mEAAM,CAAC,MAAM,CAAC,sCAAsC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YACrG,KAAI,CAAC,oBAAoB,IAAI,mEAAM,CAAC,MAAM,CAAC,sCAAsC,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC;YAC/G,KAAI,CAAC,oBAAoB,IAAI,mEAAM,CAAC,MAAM,CAAC,8CAA8C,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAEvH,KAAI,CAAC,oBAAoB,IAAI,6GAA6G,CAAC;QAC7I,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAc,GAAd;QAAA,iBAaC;QAZC,IAAI,CAAC,UAAU,GAAG,iDAAiD,CAAC;QAEpE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,IAAI,CAAC,EAAZ,CAAY,CAAC,CAAC,OAAO,CAAC,iBAAO;YAC9D,KAAI,CAAC,UAAU,IAAI,mEAAM,CAAC,MAAM,CAAC,4BAA4B,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YAC7E,KAAI,CAAC,UAAU,IAAI,mEAAM,CAAC,MAAM,CAAC,6BAA6B,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;YACjF,KAAI,CAAC,UAAU,IAAI,mEAAM,CAAC,MAAM,CAAC,6BAA6B,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAClF,KAAI,CAAC,UAAU,IAAI,mEAAM,CAAC,MAAM,CAAC,oEAAoE,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YACrH,KAAI,CAAC,UAAU,IAAI,mEAAM,CAAC,MAAM,CAAC,sCAAsC,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC;YACrG,KAAI,CAAC,UAAU,IAAI,mEAAM,CAAC,MAAM,CAAC,8CAA8C,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAE7G,KAAI,CAAC,UAAU,IAAI,6GAA6G,CAAC;QACnI,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAW,GAAX;QAAA,iBASC;QARC,IAAI,CAAC,OAAO,GAAG,uEAAuE,CAAC;QAEvF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAC,CAAC,IAAK,QAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC,OAAO,CAAC,iBAAO;YAC3E,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,gBAAgB,EAC9C,KAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EACpD,KAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EACrD,OAAO,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBASC;QARC,IAAI,CAAC,YAAY,GAAG,oDAAoD,CAAC;QAEzE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;YACtC,KAAI,CAAC,YAAY,IAAI,mEAAM,CAAC,MAAM,CAAC,gBAAgB,EACnD,KAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EACpD,KAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EACrD,OAAO,CAAC,QAAQ,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAqB,GAArB;QAAA,iBAWC;QAVC,IAAI,CAAC,iBAAiB,GAAG,6EAA6E,CAAC;QAEvG,IAAI,CAAC,iBAAiB,IAAI,mEAAM,CAAC,MAAM,CAAC,0DAA0D,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAElI,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,iBAAO;YAC3C,KAAI,CAAC,iBAAiB,IAAI,mEAAM,CAAC,MAAM,CAAC,gBAAgB,EACtD,KAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EACpD,KAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EACrD,OAAO,CAAC,QAAQ,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAW,GAAX;QAAA,iBAiBC;QAhBC,IAAI,CAAC,OAAO,GAAG,mEAAM,CAAC,MAAM,CAAC,8DAA8D,CAAC,CAAC;QAE7F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAO;YACjC,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,sBAAsB,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;YAClE,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,sBAAsB,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;YAC5E,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;YACrE,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,0BAA0B,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;YAC9E,EAAE,EAAC,OAAO,CAAC,SAAS,IAAI,SAAS,IAAI,OAAO,CAAC,SAAS,IAAG,mEAAM,CAAC,KAAK,CAAC,EAAC;gBACrE,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,wBAAwB,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;gBAC3E,EAAE,EAAC,OAAO,CAAC,cAAc,IAAI,SAAS,IAAI,OAAO,CAAC,cAAc,IAAG,mEAAM,CAAC,KAAK,CAAC,EAAC;oBAC/E,KAAI,CAAC,OAAO,IAAI,mEAAM,CAAC,MAAM,CAAC,4BAA4B,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC;gBACtF,CAAC;YACH,CAAC;YAED,KAAI,CAAC,OAAO,IAAI,6GAA6G,CAAC;QAChI,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAc,GAAd;QAAA,iBAcC;QAbC,IAAI,CAAC,UAAU,GAAG,mEAAM,CAAC,MAAM,CAAC,mDAAmD,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEpH,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,CAAC,EAAC,CAAC,IAAK,QAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC,OAAO,CAAC,iBAAO;YAC5F,EAAE,EAAC,OAAO,IAAI,SAAS,IAAI,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,EAAC;gBACtD,KAAI,CAAC,UAAU,IAAI,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBACvC,EAAE,EAAC,OAAO,CAAC,KAAK,IAAI,SAAS,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;oBACzD,KAAI,CAAC,UAAU,IAAI,gBAAgB;oBACnC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;wBACxB,KAAI,CAAC,UAAU,IAAI,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC;oBAC3C,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IA7KU,iBAAiB;QAJ7B,+DAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;;SAEnB,CAAC;OACW,iBAAiB,CA8K7B;IAAD,wBAAC;CAAA;AA9K6B;;;;;;;;;;;;ACR9B,qDAAqD,kE;;;;;;;;;;;;;;;;;;;;;;;;;ACAI;AAER;AAMjD;IAIE,sBAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEpD,+BAAQ,GAAR;QACE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IANQ;QAAR,2DAAK,EAAE;;kDAAU;IAFP,YAAY;QAJxB,+DAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;;SAEnB,CAAC;yCAKmC,6DAAa;OAJrC,YAAY,CASxB;IAAD,mBAAC;CAAA;AATwB;;;;;;;;;;;;ACRzB,0GAA0G,cAAc,gD;;;;;;;;;;;;;;;;;;;;;;;;ACAxD;AAOhE;IAJA;QAME,SAAI,GAAS,EAAE,CAAC;QACN,aAAQ,GAAG,IAAI,0DAAY,EAAE,CAAC;IAgB1C,CAAC;IAdC,8BAAM,GAAN,UAAO,GAAO;QACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,iCAAS,GAAT,UAAU,GAAO;QACf,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG;YAChB,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC;QACF,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,WAAW,EAAE,GAAG,EAAC,CAAC,CAAC;IACzC,CAAC;IAfS;QAAT,4DAAM,EAAE;;mDAA+B;IAH7B,aAAa;QAJzB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;SAEpB,CAAC;OACW,aAAa,CAmBzB;IAAD,oBAAC;CAAA;AAnByB;;;;;;;;;;;;;;ACP1B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAGnD;IACJ,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACvD,CAAC;AAED,IAAM,SAAS,GAAG;IAChB,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE;CAC1D,CAAC;AAEF,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,yDAAS,CAAC;KACzD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { FileuploadComponent } from './fileupload/fileupload.component';\r\nimport { RMDbgAppComponent } from './report/rmdbgreport.app.component';\r\nimport { TabsComponent } from './tab/tabs.component';\r\nimport { TabComponent } from './tab/tab.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    FileuploadComponent,\r\n    RMDbgAppComponent,\r\n    TabsComponent,\r\n    TabComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      //{ path: 'counter', component: CounterComponent },\r\n      //{ path: 'fetch-data', component: FetchDataComponent },\r\n      //{ path: 'file-upload', component: FileuploadComponent },\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent, RMDbgAppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p>Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","module.exports = \"<h1>Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.dateFormatted }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'api/SampleData/WeatherForecasts').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  dateFormatted: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","module.exports = \"\"","module.exports = \"<!--<h1>Upload de arquivos RM Debugger</h1>\\r\\n<input #file type=\\\"file\\\" multiple (change)=\\\"upload(file.files)\\\" />\\r\\n<br />\\r\\n<span style=\\\"font-weight:bold;color:green;\\\" *ngIf=\\\"progress > 0 && progress < 100\\\">\\r\\n  {{progress}}%\\r\\n</span>\\r\\n\\r\\n<span style=\\\"font-weight:bold;color:green;\\\" *ngIf=\\\"message\\\">\\r\\n  {{message}}\\r\\n</span>-->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpEventType, HttpResponse, HttpHandler } from '@angular/common/http';\r\nimport { AnalyzeReport } from '../AnalyzeReport';\r\nimport { ICallbackFileUpload } from './ICallbackFileUpload';\r\n\r\n@Component({\r\n  selector: 'app-fileupload',\r\n  templateUrl: './fileupload.component.html',\r\n  styleUrls: ['./fileupload.component.css']\r\n})\r\n\r\nexport class FileuploadComponent {\r\n  public progress: number;\r\n  public message: string;\r\n  public report: AnalyzeReport;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  upload(files, callbackObj: ICallbackFileUpload){\r\n    if (files.length === 0)\r\n      return null;\r\n\r\n    for (let file of files){\r\n\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsText(file, \"UTF-8\");\r\n      fileReader.onload = () => {\r\n       let analyzeReport = JSON.parse(fileReader.result.toString(), this.toCamelCase);\r\n\r\n      let fObj = analyzeReport as AnalyzeReport;\r\n\r\n      console.log(fObj);\r\n\r\n      this.message = 'Finalizado';\r\n      this.report = fObj;\r\n      callbackObj.callbackReport(this.report, this.message);\r\n      }\r\n      fileReader.onerror = (error) => {\r\n        console.log(error);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  toCamelCase(key, value) {\r\n    if (value && typeof value === 'object'){\r\n      for (var k in value) {\r\n        if (/^[A-Z]/.test(k) && Object.hasOwnProperty.call(value, k)) {\r\n          value[k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\r\n          delete value[k];\r\n        }\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","module.exports = \"<h1>Upload de arquivos RM Debugger</h1>\\r\\n<input #file type=\\\"file\\\" multiple (change)=\\\"uploadfile(file.files)\\\" />\\r\\n<br />\\r\\n<span style=\\\"font-weight:bold;color:green;\\\" *ngIf=\\\"progress > 0 && progress < 100\\\">\\r\\n  {{progress}}%\\r\\n</span>\\r\\n\\r\\n<span style=\\\"font-weight:bold;color:green;\\\" *ngIf=\\\"message\\\">\\r\\n  {{message}}\\r\\n</span>\\r\\n\\r\\n&nbsp;\\r\\n&nbsp;\\r\\n&nbsp;\\r\\n&nbsp;\\r\\n\\r\\n<report>Loading...</report>\"","import { Component, ViewChild } from '@angular/core';\r\nimport { FileuploadComponent } from '../fileupload/fileupload.component';\r\nimport { AnalyzeReport } from '../AnalyzeReport';\r\nimport { HttpClient, HttpRequest, HttpEventType, HttpResponse } from '@angular/common/http';\r\nimport { ICallbackFileUpload } from '../fileupload/ICallbackFileUpload'\r\nimport { getHostElement } from '@angular/core/src/render3';\r\nimport { RMDbgAppComponent } from '../report/rmdbgreport.app.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements ICallbackFileUpload {\r\n  private fileupload: FileuploadComponent;\r\n  public report: AnalyzeReport;\r\n  public progress: number;  \r\n  public message: string;  \r\n  @ViewChild(RMDbgAppComponent) tab: RMDbgAppComponent;\r\n\r\n  constructor(private http: HttpClient) { }\r\n  uploadfile(files) {\r\n    this.fileupload = new FileuploadComponent(this.http);\r\n    this.fileupload.upload(files, this);    \r\n  }\r\n\r\n  callbackReport(report: AnalyzeReport, message: string) : void {\r\n    this.message = message;\r\n    this.tab.setReport(report);  \r\n  }\r\n\r\n  callbackProgress(progress: number) : void {\r\n    this.progress = progress;\r\n  }  \r\n}\r\n","module.exports = \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\"","module.exports = \"<header>\\r\\n  <nav class='navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3'>\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]='[\\\"/\\\"]'>ReportViewer</a>\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\" (click)=\\\"toggle()\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\" [ngClass]='{\\\"show\\\": isExpanded}'>\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]' [routerLinkActiveOptions]='{ exact: true }'>\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]='[\\\"/\\\"]'>Home</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","module.exports = \"<my-tabs>\\r\\n  <my-tab [tabTitle]=\\\"'Assemblies'\\\">\\r\\n    {{assemblies}}\\r\\n  </my-tab>\\r\\n  <my-tab tabTitle=\\\"Threads\\\">\\r\\n    {{threads}}\\r\\n  </my-tab>\\r\\n  <my-tab tabTitle=\\\"Tipos de objetos em memória\\\" style=\\\"font-family: 'Courier New', Courier, monospace;width:max-content\\\">\\r\\n    {{dumpHeapStat}}\\r\\n  </my-tab>\\r\\n  <my-tab tabTitle=\\\"Tipos de objetos na fila de finalização em memória\\\" style=\\\"font-family: 'Courier New', Courier, monospace;width:max-content\\\">\\r\\n    {{dumpFinalizeQueue}}\\r\\n  </my-tab>\\r\\n  <my-tab tabTitle=\\\"Tipos de objetos RM em memória\\\" style=\\\"font-family: 'Courier New', Courier, monospace;width:max-content\\\">\\r\\n    {{rmTypes}}\\r\\n  </my-tab>\\r\\n  <my-tab tabTitle=\\\"Grandes Data Tables em memória\\\">\\r\\n    {{dataTables}}\\r\\n  </my-tab>\\r\\n  <my-tab tabTitle=\\\"DataTables de mesmo nome que somam grandes volumes de registros\\\">\\r\\n    {{aggregatedDataTables}}\\r\\n  </my-tab>\\r\\n  <my-tab tabTitle=\\\"Objetos de mesmo tipo em grandes volumes\\\">\\r\\n    {{largeObjects}}\\r\\n  </my-tab>\\r\\n  <my-tab tabTitle=\\\"Relatórios em memória\\\">\\r\\n    {{reports}}\\r\\n  </my-tab>\\r\\n</my-tabs>\\n<hr>\\n\"","import { Component } from '@angular/core';\nimport { AnalyzeReport } from '../AnalyzeReport';\nimport { String, StringBuilder } from 'typescript-string-operations';\n\n@Component({\n  selector: 'report',\n  templateUrl: './rmdbgreport.app.component.html'\n})\nexport class RMDbgAppComponent {\n  report: AnalyzeReport;\n  assemblies: string;\n  threads: string;\n  rmTypes: string;\n  largeObjects: string;\n  dumpHeapStat: string;\n  dumpFinalizeQueue: string;\n  dataTables: string;\n  aggregatedDataTables: string;\n  reports: string;\n  percentageInFinalizeque: string;  \n   \n  setReport(report: AnalyzeReport){\n    this.report = report;\n    this.loadReport();\n  }\n\n  loadReport() {\n    this.loadAssemblies();\n    this.loadThreads();\n    this.loadPercentageInFinalizerQueue();\n    this.loadDumpHeapStat();\n    this.loadDumpFinalizeQueue();\n    this.loadRMTypes();\n    this.loadDataTables();\n    this.loadAggregatedDataTables();\n    this.loadLargeObjects();\n    this.loadReports();    \n  }\n\n  loadPercentageInFinalizerQueue() {\n    var count: number = 0;\n    var countInFinalizeQueue: number = 0;    \n    this.report.dumpFinalizeQueue.forEach(element => {\n      countInFinalizeQueue += element.count;\n    });\n    this.report.dumpHeapStat.forEach(element => {\n      count += element.count;\n    });\n\n    this.percentageInFinalizeque = ((countInFinalizeQueue / count) * 100).toString().substring(0, 5);\n  }\n\n  getJustifiedString(lenght: number, text: string): string{\n    var result = ' '.repeat(lenght - text.length) + text; \n    return result;\n  }\n\n  loadReports() {\n    this.reports = \"Listando informações sobre relatórios em memória. \\n\\n\";\n\n    this.report.reports.forEach(element =>{\n      this.reports += String.Format(\"Descrição do relatório: {0} \\n\", element.descReport);\n      this.reports += String.Format(\"Código do relatório: {0} \\n\", element.codReport);\n      this.reports += String.Format(\"Código da coligada do relatório: {0} \\n\\n\", element.codColigada);\n      this.reports += String.Format(\"Quantidade de memória referenciado pelo relatório (estimado em bytes) {0} \\n\", element.size);\n      this.reports += String.Format(\"Stack de execução {0} \\n\\n\", element.executionStack);\n      this.reports += \"###################################################################################################### \\n\\n\";\n    });\n  }\n\n  loadLargeObjects() {\n    this.largeObjects = \"Listando grandes volumes de objetos do mesmo tipo. \\n\\n\";\n\n    this.report.largeObjects.forEach(element =>{\n      this.largeObjects += String.Format(\"Nome do Tipo de objeto: {0} \\n\", element.typeName);\n      this.largeObjects += String.Format(\"Quantidade de objetos: {0} \\n\", element.count);      \n      this.largeObjects += String.Format(\"Quantidade de memória referenciado por todos os objetos (estimado em bytes) {0} \\n\\n\",\n       element.estimatedSize);      \n      this.largeObjects += String.Format(\"Caminhos que fazem referência:  \\n  {0} \\n\\n\", element.roots.join('\\n\\n'));\n\n      this.largeObjects += \"###################################################################################################### \\n\\n\";\n    });\n  }\n\n  loadAggregatedDataTables() {\n    this.aggregatedDataTables = \"Listando os maiores Data Tables em memória \\n\\n\";\n\n    this.report.dataTables.filter(x => x.count > 1).forEach(element =>{\n      this.aggregatedDataTables += String.Format(\"Nome do Data Table: {0} \\n\", element.name);\n      this.aggregatedDataTables += String.Format(\"Número de Data Tables {0}: {1} \\n\", element.name, element.count);\n      this.aggregatedDataTables += String.Format(\"Número de registros totais: {0} \\n\\n\", element.rowCount);\n      this.aggregatedDataTables += String.Format(\"Propriedades estendidas: \\n {0} \\n\\n\", element.extendedProperties);\n      this.aggregatedDataTables += String.Format(\"Caminhos que fazem referência:  \\n  {0} \\n\\n\", element.roots.join('\\n\\n'));\n\n      this.aggregatedDataTables += \"###################################################################################################### \\n\\n\";\n    });\n  }\n\n  loadDataTables() {\n    this.dataTables = \"Listando os maiores Data Tables em memória \\n\\n\";\n\n    this.report.dataTables.filter(x => x.count == 1).forEach(element =>{\n      this.dataTables += String.Format(\"Nome do Data Table: {0} \\n\", element.name);\n      this.dataTables += String.Format(\"Endereço em memória: {0} \\n\", element.address);\n      this.dataTables += String.Format(\"Número de registros: {0} \\n\", element.rowCount);\n      this.dataTables += String.Format(\"Quantidade de memória referenciada (aproximada em bytes): {0} \\n\\n\", element.size);\n      this.dataTables += String.Format(\"Propriedades estendidas: \\n {0} \\n\\n\", element.extendedProperties);\n      this.dataTables += String.Format(\"Caminhos que fazem referência:  \\n  {0} \\n\\n\", element.roots.join('\\n\\n'));\n\n      this.dataTables += \"###################################################################################################### \\n\\n\";\n    });\n  }\n\n  loadRMTypes() {\n    this.rmTypes = \"Comando similar ao !dumpheap -stat filtrando somente tipos do RM \\n\\n\";\n\n    this.report.rmTypes.sort((x,y) => x.count > y.count ? -1 : 1).forEach(element => {\n      this.rmTypes += String.Format(\"{0} {1} {2} \\n\", \n      this.getJustifiedString(12, element.size.toString()), \n      this.getJustifiedString(12, element.count.toString()),\n      element.name);\n    });\n  }\n\n  loadDumpHeapStat(){\n    this.dumpHeapStat = \"Comando similar ao !dumpheap -stat do windbg. \\n\\n\";\n\n    this.report.dumpHeapStat.forEach(element => {       \n      this.dumpHeapStat += String.Format(\"{0} {1} {2} \\n\", \n      this.getJustifiedString(12, element.size.toString()), \n      this.getJustifiedString(12, element.count.toString()),\n      element.typeName);\n    });\n  }\n\n  loadDumpFinalizeQueue() {\n    this.dumpFinalizeQueue = \"Comando similar ao !dumpheap -stat do windbg para fila de finalização. \\n\\n\";\n\n    this.dumpFinalizeQueue += String.Format(\"Percentual de objetos na fila de finalização = {0}% \\n\\n\", this.percentageInFinalizeque);\n\n    this.report.dumpFinalizeQueue.forEach(element => {\n      this.dumpFinalizeQueue += String.Format(\"{0} {1} {2} \\n\",\n        this.getJustifiedString(12, element.size.toString()),\n        this.getJustifiedString(12, element.count.toString()),\n        element.typeName);\n    });\n  }\n\n  loadThreads() {\n    this.threads = String.Format(\"Threads executando no momento em que o dump foi gerado. \\n\\n\");\n\n    this.report.threads.forEach(element => {\n      this.threads += String.Format(\"Id da Thread: {0} \\n\", element.id);\n      this.threads += String.Format(\"É Background: {0} \\n\", element.isBackground);\n      this.threads += String.Format(\"Está ativa: {0} \\n\", element.isAlive);\n      this.threads += String.Format(\"\\nStack Trace: \\n {0} \\n\", element.stackTrace);\n      if(element.exception != undefined && element.exception!= String.Empty){\n        this.threads += String.Format(\"\\nException: \\n {0} \\n\", element.exception);\n        if(element.innerException != undefined && element.innerException!= String.Empty){\n          this.threads += String.Format(\"Inner Exception: \\n {0} \\n\", element.innerException);\n        }\n      }\n\n      this.threads += \"###################################################################################################### \\n\\n\";\n    });\n  }\n\n  loadAssemblies() {     \n    this.assemblies = String.Format(\"Foram encontrados {0} assemblies carregados. \\n\\n\", this.report.assemblies.length);\n\n    this.report.assemblies.sort((x,y) => x.types.length > y.types.length ? 1 : -1).forEach(element => {\n      if(element != undefined && element.name != undefined){\n      this.assemblies += element.name + \"\\n\";\n      if(element.types != undefined && element.types.length > 0){\n        this.assemblies += \"     Tipos: \\n\"\n        element.types.forEach(type => {\n          this.assemblies += \"     \" + type + \"\\n\";\n        });\n      }\n    }\n    }); \n  }\n}\n","module.exports = \"<div style=\\\"white-space: pre-wrap;\\\" [hidden]=\\\"!selected\\\">\\n  <ng-content></ng-content>\\n</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { Tab } from './tab.interface';\nimport { TabsComponent } from './tabs.component';\n\n@Component({\n  selector: 'my-tab',\n  templateUrl: './tab.component.html'\n})\nexport class TabComponent implements OnInit, Tab {\n  selected: boolean;\n  @Input() tabTitle;\n    \n  constructor(private tabsComponent: TabsComponent) {}\n  \n  ngOnInit() {\n    this.tabsComponent.addTab(this);\n  }\n}","module.exports = \"<ul>\\n  <li *ngFor=\\\"let tab of tabs\\\">\\n    <a href=\\\"#\\\" (click)=\\\"selectTab(tab)\\\">{{tab.tabTitle}}</a>\\n  </li>\\n</ul>\\n<ng-content></ng-content>\"","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Tab } from './tab.interface';\n\n@Component({\n  selector: 'my-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent {\n  \n  tabs:Tab[] = [];\n  @Output() selected = new EventEmitter();\n  \n  addTab(tab:Tab) {\n    if (!this.tabs.length) {\n      tab.selected = true;\n    }\n    this.tabs.push(tab);\n  }\n  \n  selectTab(tab:Tab) {\n    this.tabs.map((tab) => {\n      tab.selected = false;\n    })\n    tab.selected = true;\n    this.selected.emit({selectedTab: tab});    \n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false  \r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport { RMDbgAppComponent } from './app/report/rmdbgreport.app.component';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}